services:
  flask:
    container_name: flask
    image: vadims06/topolograph:latest
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: $MONGODB_DATABASE
      MONGODB_USERNAME: $MONGODB_USERNAME
      MONGODB_PASSWORD: $MONGODB_PASSWORD
      MONGODB_HOSTNAME: $MONGODB_HOSTNAME
      NAPALM_USERNAME: $NAPALM_USERNAME
      NAPALM_PASSWORD: $NAPALM_PASSWORD
      NAPALM_PORT: $NAPALM_PORT
      DNS: $DNS
      NETBOX_URL: $NETBOX_URL
      NETBOX_RO_TOKEN: $NETBOX_RO_TOKEN
      TOPOLOGRAPH_WEB_API_USERNAME_EMAIL: $TOPOLOGRAPH_WEB_API_USERNAME_EMAIL
      TOPOLOGRAPH_WEB_API_PASSWORD: $TOPOLOGRAPH_WEB_API_PASSWORD
      TOPOLOGRAPH_WEB_API_AUTHORISED_NETWORKS: $TOPOLOGRAPH_WEB_API_AUTHORISED_NETWORKS
      SWAGGER_HOST: "localhost:$TOPOLOGRAPH_PORT"
    ports:
      - "$TOPOLOGRAPH_PORT:5000"
    depends_on:
      - mongodb
    networks:
      - backend
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGODB_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGODB_PASSWORD
      MONGO_INITDB_DATABASE: $MONGODB_DATABASE
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend
networks:
  backend:
    name: topolograph_backend
    driver: bridge
volumes:
  mongodbdata:
    driver: local
